{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rubi\\\\Documents\\\\GitHub\\\\xbt-frontend\\\\src\\\\components\\\\ChangePassword.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport loginImg from \"../usingImages/loginImg.svg\";\nimport { Link } from \"react-router-dom\";\nimport { defaultAPI } from \"../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChangePassword(_ref) {\n  _s();\n\n  let {\n    user\n  } = _ref;\n  if (user) return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 20\n  }, this);\n  const passwordRef = useRef();\n  const [passChanged, setPass] = useState(false);\n  const confirm_passwordRef = useRef();\n  const queryString = window.location.search;\n  const urlParam = new URLSearchParams(queryString);\n\n  if (passChanged) {\n    useEffect(() => {\n      const timer = setTimeout(() => {\n        return /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 16\n        }, this);\n      }, 5000);\n      return () => clearTimeout(timer);\n    }, []);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row resgister-div\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-6 offset-sm-3 \",\n          children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card card-sign\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-6\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: loginImg,\n                  alt: \"\",\n                  className: \"loginImg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Change password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                  action: \"\",\n                  className: \"login-form\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"emailTb\",\n                    children: \"Enter password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 41,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    ref: passwordRef,\n                    id: \"emailTb\",\n                    type: \"password\",\n                    className: \"form-control\",\n                    placeholder: \"password\",\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 42,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 50,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    ref: confirm_passwordRef,\n                    id: \"emailTb\",\n                    type: \"password\",\n                    className: \"form-control\",\n                    placeholder: \"password\",\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"btn-group\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      className: \"btn btn-sign\",\n                      onClick: () => {\n                        const reset_token = urlParam.get('reset_token');\n\n                        try {\n                          fetch(`${defaultAPI.api.authUrl}/identity/users/password/confirm_code?reset_password_token=${reset_token}&password=${passwordRef.current.value}&confirm_password=${confirm_passwordRef.current.value}`, {\n                            method: \"POST\",\n                            headers: {\n                              \"Content-Type\": \"application/json\",\n                              Accept: \"application/json\"\n                            }\n                          }).then(toast.success(\"Password changed successfully! \\n You may login with your new password.\", {\n                            position: \"top-center\"\n                          }, setPass(true))).catch(err => {\n                            toast.error(\"Error!\", {\n                              position: \"top-center\"\n                            });\n                          });\n                        } catch {\n                          err => {\n                            console.log(err.message);\n                          };\n                        }\n                      },\n                      children: \"Forgot Password\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 63,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChangePassword, \"B0R3iHtdNRI5prcEUpjS8an9MsY=\");\n\n_c = ChangePassword;\nexport default ChangePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"sources":["C:/Users/rubi/Documents/GitHub/xbt-frontend/src/components/ChangePassword.jsx"],"names":["React","useRef","useEffect","useState","Navigate","toast","ToastContainer","loginImg","Link","defaultAPI","ChangePassword","user","passwordRef","passChanged","setPass","confirm_passwordRef","queryString","window","location","search","urlParam","URLSearchParams","timer","setTimeout","clearTimeout","reset_token","get","fetch","api","authUrl","current","value","method","headers","Accept","then","success","position","catch","err","error","console","log","message"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState} from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport loginImg from \"../usingImages/loginImg.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { defaultAPI } from \"../api/api\";\r\n\r\nfunction ChangePassword({ user }) {\r\n  if (user) return <Navigate to=\"/\" />;\r\n\r\n    const passwordRef = useRef();\r\n    const [passChanged, setPass] = useState(false);\r\n    const confirm_passwordRef = useRef();\r\n    const queryString = window.location.search\r\n    const urlParam = new URLSearchParams(queryString)\r\n    if(passChanged){\r\n    useEffect(()=>{\r\n      const timer = setTimeout(()=>{\r\n        return <Navigate to='/login'/>\r\n      }, 5000)\r\n      return () => clearTimeout(timer);\r\n    }, []);}\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <div className=\"row resgister-div\">\r\n          <div className=\"col-sm-6 offset-sm-3 \">\r\n            <ToastContainer />\r\n            <div className=\"card card-sign\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <img src={loginImg} alt=\"\" className=\"loginImg\" />\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <strong>Change password</strong>\r\n\r\n                  <br />\r\n                  <br />\r\n                  <form action=\"\" className=\"login-form\">\r\n                    <label htmlFor=\"emailTb\">Enter password</label>\r\n                    <input\r\n                    ref={passwordRef}\r\n                      id=\"emailTb\"\r\n                      type=\"password\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"password\"\r\n                      required\r\n                    />\r\n                    <br />\r\n                    <input\r\n                    ref={confirm_passwordRef}\r\n                      id=\"emailTb\"\r\n                      type=\"password\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"password\"\r\n                      required\r\n                    />\r\n                    <br />\r\n\r\n                    <div className=\"btn-group\">\r\n                      \r\n                      <button type=\"button\" className=\"btn btn-sign\" onClick={() => {\r\n                          const reset_token = urlParam.get('reset_token');\r\n                            try{\r\n                         fetch(`${defaultAPI.api.authUrl}/identity/users/password/confirm_code?reset_password_token=${reset_token}&password=${passwordRef.current.value}&confirm_password=${confirm_passwordRef.current.value}`, {\r\n                            method: \"POST\",\r\n                            headers:{\r\n                                \"Content-Type\": \"application/json\",\r\n                                Accept: \"application/json\"\r\n                            }\r\n                            \r\n                        }).then(\r\n                            toast.success(\"Password changed successfully! \\n You may login with your new password.\", {\r\n                                position: \"top-center\"\r\n                            },\r\n                            setPass(true)\r\n                            )\r\n                        ).catch((err)=>{\r\n                          toast.error(\"Error!\", {\r\n                              position: \"top-center\"\r\n                          })\r\n                        })\r\n                    }catch{(err)=>{\r\n                        console.log(err.message)\r\n                    }}\r\n                      }}>\r\n                        Forgot Password\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChangePassword;\r\n"]},"metadata":{},"sourceType":"module"}